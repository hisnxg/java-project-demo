<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaikeba.mapper.DoctorMapper">
  <resultMap id="BaseResultMap" type="com.kaikeba.pojo.Doctor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="doctorName" jdbcType="VARCHAR" property="doctorName" />
    <result column="idNumber" jdbcType="VARCHAR" property="idNumber" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="telPhone" jdbcType="VARCHAR" property="telPhone" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="deptId" jdbcType="INTEGER" property="deptId" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="inTime" jdbcType="DATE" property="inTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, doctorName, idNumber, phone, telPhone, sex, birthday, age, email, deptId,
    education, description, inTime, status
  </sql>
  <select id="selectByExample" parameterType="com.kaikeba.pojo.DoctorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from doctor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaikeba.pojo.DoctorExample">
    delete from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaikeba.pojo.Doctor">
    insert into doctor (id, doctorName, idNumber,
      phone, telPhone, sex, 
      birthday, age, email, 
       deptId, education, description,
      inTime, status)
    values (#{id,jdbcType=INTEGER}, #{doctorName,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{telPhone,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{birthday,jdbcType=DATE}, #{age,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=INTEGER}, #{education,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{inTime,jdbcType=DATE}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kaikeba.pojo.Doctor">
    insert into doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        doctorId,
      </if>
      <if test="doctorName != null">
        doctorName,
      </if>
      <if test="idNumber != null">
        idNumber,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="telPhone != null">
        telPhone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="deptId != null">
        deptId,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="inTime != null">
        inTime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="doctorName != null">
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="telPhone != null">
        #{telPhone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        #{education,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaikeba.pojo.DoctorExample" resultType="java.lang.Long">
    select count(*) from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update doctor
    <set>
      <if test="record.doctorId != null">
        doctorId = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.doctorName != null">
        doctorName = #{record.doctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.idNumber != null">
        idNumber = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.telPhone != null">
        telPhone = #{record.telPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        deptId = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.inTime != null">
        inTime = #{record.inTime,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update doctor
    set id = #{record.doctorId,jdbcType=INTEGER},
      doctorName = #{record.doctorName,jdbcType=VARCHAR},
      idNumber = #{record.idNumber,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      telPhone = #{record.telPhone,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      age = #{record.age,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      deptId = #{record.deptId,jdbcType=INTEGER},
      education = #{record.education,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      inTime = #{record.inTime,jdbcType=DATE},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaikeba.pojo.Doctor">
    update doctor
    <set>
      <if test="doctorName != null">
        doctorName = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        idNumber = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="telPhone != null">
        telPhone = #{telPhone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        department = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        eduction = #{education,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        inTime = #{inTime,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where doctorId = #{doctorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaikeba.pojo.Doctor">
    update doctor
    set doctorName = #{doctorName,jdbcType=VARCHAR},
      idNumber = #{idNumber,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      telPhone = #{telPhone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      age = #{age,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      deptId = #{deptId,jdbcType=INTEGER},
      education = #{education,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      inTime = #{inTime,jdbcType=DATE},
      status = #{status,jdbcType=INTEGER}
    where id = #{doctorId,jdbcType=INTEGER}
  </update>
</mapper>